concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository
    != 'apereo/cas' }}
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{
    github.event.pull_request.id }}
env:
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JAVA_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JDK_CURRENT: 21
  JDK_DISTRIBUTION: corretto
  JDK_LATEST: 22
  TERM: xterm-256color
jobs:
  initialize:
    needs:
    - trigger-ci
    outputs:
      JDK_CURRENT: ${{ env.JDK_CURRENT }}
      JDK_LATEST: ${{ env.JDK_LATEST }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
  trigger-ci:
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.pull_request.labels.*.name,
      'Renovate') && !contains(github.event.head_commit.message, 'trigger dependency
      update') && !contains(github.event.head_commit.message, 'documentation update')
      }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Trigger CI
      run: echo "CI Triggered"
  validate-commandline-shell:
    continue-on-error: false
    name: commandline shell - JDK ${{ matrix.jdk }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Validate CAS Command-line Shell - JDK ${{ matrix.jdk }}
      run: 'chmod -R +x ./ci/tests/shell/run-shell.sh && ./ci/tests/shell/run-shell.sh

        echo "Checking for stack traces in output that would indicate an error"

        cat cas-shell.out

        count=$(grep -c -e ".*\(Exception\|Throwable\|caused\\sby\).*" cas-shell.out
        || true);

        test $count -eq 0

        '
      timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        jdk:
        - ${{ needs.initialize.outputs.JDK_CURRENT }}
        - ${{ needs.initialize.outputs.JDK_LATEST }}
  validate-javadocs:
    continue-on-error: false
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ env.JDK_CURRENT }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Validate Javadocs
      run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel javadoc
        -x test -x check -DskipNestedConfigMetadataGen=true --parallel --max-workers=8
        --no-configuration-cache
  validate-spring-cloud-config-server:
    continue-on-error: false
    name: spring cloud config server - JDK ${{ matrix.jdk }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Validate Spring Cloud Config Server - JDK ${{ matrix.jdk }}
      run: ./ci/tests/webapp/validate-configserver-webapp.sh
    strategy:
      fail-fast: false
      matrix:
        jdk:
        - ${{ needs.initialize.outputs.JDK_CURRENT }}
        - ${{ needs.initialize.outputs.JDK_LATEST }}
  validate-webapp-embedded:
    continue-on-error: false
    name: embedded - JDK ${{ matrix.jdk }} - ${{ matrix.category }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Validate ${{ matrix.category }}
      run: ./ci/tests/webapp/validate-embedded-webapp.sh ${{ matrix.category }}
    strategy:
      fail-fast: false
      matrix:
        category:
        - tomcat
        - jetty
        - undertow
        jdk:
        - ${{ needs.initialize.outputs.JDK_CURRENT }}
        - ${{ needs.initialize.outputs.JDK_LATEST }}
  validate-webapp-external:
    continue-on-error: false
    name: ${{ matrix.category }} with external tomcat - JDK ${{ matrix.jdk }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Validate ${{ matrix.category }}
      run: ./ci/tests/webapp/validate-external-webapp.sh ${{ matrix.category }}
    strategy:
      fail-fast: false
      matrix:
        category:
        - cas-server
        - config-server
        jdk:
        - ${{ needs.initialize.outputs.JDK_CURRENT }}
        - ${{ needs.initialize.outputs.JDK_LATEST }}
name: Validation
on:
  repository_dispatch:
    types: trigger-ga___validation.yml
