concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository
    != 'apereo/cas' }}
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{
    github.event.pull_request.id }}
env:
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GRADLE_BUILD_OPTIONS: --no-daemon -x check -x test -x javadoc --configure-on-demand
    --max-workers=8 --no-configuration-cache
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JAVA_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JDK_CURRENT: 21
  JDK_DISTRIBUTION: oracle
  JDK_LATEST: 22
  TERM: xterm-256color
jobs:
  build:
    continue-on-error: false
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ matrix.jdk }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
      shell: bash
    - continue-on-error: true
      name: Build with JDK ${{ matrix.jdk }}
      run: ./gradlew build ${{ env.GRADLE_BUILD_OPTIONS }}
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: binary-artifacts
        path: ./**/build/libs/*.*
    strategy:
      fail-fast: false
      matrix:
        jdk:
        - ${{ needs.initialize.outputs.JDK_CURRENT }}
        - ${{ needs.initialize.outputs.JDK_LATEST }}
  build-graalvm:
    continue-on-error: false
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: graalvm/setup-graalvm@v1
      with:
        cache: gradle
        distribution: graalvm
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: ${{ env.JDK_LATEST }}
        set-java-home: 'true'
    - continue-on-error: true
      name: GraalVM Versions
      run: 'echo "GRAALVM_HOME: $GRAALVM_HOME"

        echo "JAVA_HOME: $JAVA_HOME"

        java --version

        native-image --version

        '
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Build with Gradle
      run: chmod +x ./ci/tests/native/build.sh && ./ci/tests/native/build.sh
      timeout-minutes: 20
  initialize:
    if: ${{ (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'Bot')) }}
    outputs:
      JDK_CURRENT: ${{ env.JDK_CURRENT }}
      JDK_LATEST: ${{ env.JDK_LATEST }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
name: Build
on:
  repository_dispatch:
    types: trigger-ga___build.yml
