concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository
    != 'apereo/cas' }}
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{
    github.event.pull_request.id }}
env:
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JAVA_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JDK_CURRENT: 21
  JDK_DISTRIBUTION: corretto
  PYTHON_VERSION: 3.12.3
  TERM: xterm-256color
jobs:
  initialize:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
  tests-performance-jmeter:
    continue-on-error: false
    name: jmeter - ${{ matrix.category }} - ${{ matrix.protocols }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: JMeter Performance Tests ${{ matrix.protocols }} / ${{ matrix.category
        }}
      uses: nick-fields/retry@v3
      with:
        command: 'export RUNNER_OS=${{ runner.os }}

          ./ci/tests/perf/perftests-jmeter.sh ${{ matrix.category }} ${{ matrix.protocols
          }}

          '
        max_attempts: 2
        retry_on: error
        shell: bash
        timeout_minutes: 15
    strategy:
      fail-fast: false
      matrix:
        category:
        - tomcat
        - jetty
        - undertow
        protocols:
        - cas
        - oidc
        - saml
  tests-performance-locust:
    continue-on-error: false
    name: locust - ${{ matrix.category }}
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Locust Performance Tests
      run: ./ci/tests/perf/perftests-locust.sh ${{ matrix.category }}
    strategy:
      fail-fast: false
      matrix:
        category:
        - tomcat
        - jetty
        - undertow
name: Performance Tests
on:
  repository_dispatch:
    types: trigger-ga___performance.yml
