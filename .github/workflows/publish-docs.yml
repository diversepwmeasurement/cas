concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository
    != 'apereo/cas' }}
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{
    github.event.pull_request.id }}
env:
  DOCS_BRANCH: master
  GH_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
  GH_PACKAGE_REGISTRY_USER: ${{ secrets.GH_PACKAGE_REGISTRY_USER }}
  GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  GRADLE_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JAVA_OPTS: -Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server
  JDK_CURRENT: 21
  JDK_DISTRIBUTION: corretto
  RUBY_VERSION: 3.3.1
  TERM: xterm-256color
jobs:
  initialize:
    needs:
    - trigger-ci
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: ls ./ci && find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
  publish-docs:
    continue-on-error: false
    needs:
    - initialize
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JDK_DISTRIBUTION }}
        java-version: ${{ env.JDK_CURRENT }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Initialize
      run: find ./ci -type f -name "*.sh" -exec chmod +x "{}" \; && ./ci/init-build.sh
    - continue-on-error: true
      name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
    - continue-on-error: true
      name: Install Ruby gems
      run: gem install bundler
    - continue-on-error: true
      name: Setup Jekyll Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-${{ github.repository }}
        path: 'jekyll/.jekyll-metadata

          jekyll/.jekyll-cache

          '
    - continue-on-error: true
      name: Publish Documentation
      uses: nick-fields/retry@v3
      with:
        command: ./ci/docs/publish.sh --branch ${{ env.DOCS_BRANCH }}
        max_attempts: 2
        shell: bash
        timeout_minutes: 55
  trigger-ci:
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.pull_request.labels.*.name,
      'Renovate') && !contains(github.event.head_commit.message, 'trigger dependency
      update') && !contains(github.event.head_commit.message, 'documentation update')
      }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Trigger CI
      run: echo "CI Triggered"
name: Publish Documentation
on:
  repository_dispatch:
    types: trigger-ga___publish-docs.yml
